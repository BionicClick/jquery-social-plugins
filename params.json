{"name":"jQuery.socialPlugins","body":"## $.socialPlugins.load( plugins )\r\n\r\nAccepts an `Array` of plugin names (defaults to all supported plugins).\r\n\r\nFor each plugin that isn't already loaded:\r\n\r\n* sets default data-attributes;\r\n* asynchronously loads the JavaScript file.\r\n\r\nExamples:\r\n\r\n```javascript\r\n$.socialPlugins.load(); // loads all supported plugins\r\n$.socialPlugins.load(['facebook', 'twitter']); // only Facebook and Twitter\r\n```\r\n\r\n## $.socialPlugins.parse( plugins )\r\n\r\nAccepts an `Array` of plugin names (defaults to all supported plugins).\r\n\r\nFor each loaded plugin:\r\n\r\n* sets default data-attributes;\r\n* calls the plugin's parse function, discarding errors.\r\n\r\nThis method is useful when you dynamically update your page (i.e. via ajax) and want to render new plugin tags.\r\n\r\nExamples:\r\n\r\n```javascript\r\n$.socialPlugins.parse(); // calls the parse function of all loaded plugins\r\n$.socialPlugins.parse(['facebook']); // only Facebook (renders new Like buttons, etc.)\r\n```\r\n\r\n## Setting defaults\r\n\r\nDefault data-attributes can be set to your plugin tags before load and parse:\r\n\r\n```javascript\r\n$.socialPlugins.plugin_name.defaults = {\r\n  'selector': {\r\n    attribute: 'value'\r\n  }\r\n}\r\n```\r\n\r\nBefore `plugin_name` is loaded, or its parse function called, `data-attribute=\"value\"` will be added to all elements matching `selector` which do not already have a `data-attribute` attribute.\r\n\r\nExamples:\r\n\r\n```javascript\r\n// Default all Facebook Like and Subscribe buttons to the \"button_count\" layout\r\n$.socialPlugins.facebook.defaults = {\r\n  '.fb-like, .fb-subscribe': {\r\n    layout: 'button_count'\r\n  }\r\n};\r\n\r\n// Default all Tweet buttons to the French language and \"large\" size\r\n$.socialPlugins.twitter.defaults = {\r\n  '.twitter-share-button': {\r\n    lang: 'fr',\r\n    size: 'large'\r\n  }\r\n};\r\n```\r\n\r\n## Events\r\n\r\n* `load.plugin_name` is fired when a plugin's JavaScript is successfully loaded.\r\n\r\n* `parse.plugin_name` is fired when a plugin's parse function is successfully called.\r\n\r\n## Supported Plugins\r\n\r\n```javascript\r\nfacebook: {\r\n  url: '//connect.facebook.net/en_US/all.js',\r\n  parse: function() { FB.XFBML.parse(); }\r\n},\r\ntwitter: {\r\n  url: '//platform.twitter.com/widgets.js',\r\n  parse: function() { twttr.widgets.load(); }\r\n},\r\ngoogle: {\r\n  url: '//apis.google.com/js/plusone.js',\r\n  parse: function() { gapi.plusone.go(); }\r\n},\r\nlinkedin: {\r\n  url: '//platform.linkedin.com/in.js',\r\n  parse: function() { IN.parse(); }\r\n}\r\n```\r\n\r\nTo add a new plugin:\r\n\r\n```javascript\r\n$.socialPlugins.plugin_name = {\r\n  url: '...',\r\n  parse: function() { plugin_global_var.parseFunction(); }\r\n};\r\n$.socialPlugins.supported.push('plugin_name');\r\n```\r\n\r\n## FB.init\r\n\r\nFacebook Connect requires initialization with `FB.init`.\r\n\r\nThis can be done by attaching an event handler to `load.facebook`:\r\n\r\n```javascript\r\n$(document).on('load.facebook', function() {\r\n  $('body').append('<div id=\"fb-root\"></div>'); // Required by Facebook Connect\r\n  FB.init({\r\n    appId: $('meta[property=\"fb:app_id\"]').attr('content'),\r\n    status: true,\r\n    cookie: true,\r\n    xfbml: true\r\n  });\r\n});\r\n```\r\n\r\n## License\r\n\r\nCopyright (c) 2012 [Thibaut Courouble](http://thibaut.me)\r\n\r\nLicensed under the MIT License.","tagline":"A jQuery plugin to lazy load social plugins such as Facebook Connect, Twitter Widgets, Google +1, and LinkedIn.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}